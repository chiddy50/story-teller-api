// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url  	    = env("DATABASE_URL")
}



enum Award {
  FIRST
  SECOND
  THIRD
  RECOGNIZED
}

enum UserRole {
  ADMIN
  USER
}

enum TransactionStatus {
  PENDING
  SUCCESS
  FAILED
}

model Challenge {
  id                    String  @id @default(cuid())
  userId                String
  projectMintAddress    String?
  transactionPublicId   String?
  projectId             String?
  projectTransactionId  String?
  nftId                 String?
  nftTransactionId      String?
  title                 String
  description           String?
  image                 String
  date                  String
  time                  String
  price                 String
  currency              String
  symbol                String 
  transactions          Transaction[]
  stories               Story[]

  createdAt          DateTime     @default(now()) // New column for storing creation date and time

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

}

model Story {
  id                    String  @id @default(cuid())
  userId                String
  challengeId           String
  story                 Json
  nftId                 String?
  nftTransactionId      String?
  projectId             String?
  amountPaid            String?
  amountPending         String?
  paidAt                DateTime?
  awardedAt             DateTime?
  createdAt             DateTime     @default(now())
  award                 Award?

  user                  User @relation(fields: [userId], references: [id], onDelete: Cascade)
  challenge             Challenge @relation(fields: [challengeId], references: [id], onDelete: Cascade)
}

model Transaction {
  id                      String    @id @default(cuid())
  userId                  String
  challengeId             String?
  transactionPublicId     String?
  percentage              String?
  tenPercentFee           String?
  tenPercentFeeInSol      String?
  totalChargeInSol        String?
  totalChargePlusFeeInSol String?
  totalCharge             String?
  totalChargePlusFee      String?
  message                 String?
  currency                String?
  symbol                  String? 
  status                  TransactionStatus @default(PENDING)  
  challenges              Challenge[]
  createdAt               DateTime     @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id                        String    @id @default(cuid())
  name                      String?
  password                  String?
  email                     String?   @unique
  emailVerified             DateTime?
  publicKey                 String?
  primaryWalletAddress      String?
  publicId                  String? @unique

  createdAt                 DateTime     @default(now())

  role                      UserRole? @default(ADMIN)
  challenges                Challenge[]
  transactions              Transaction[]
  stories                   Story[]
}